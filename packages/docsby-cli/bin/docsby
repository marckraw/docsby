#!/usr/bin/env node

const yargs = require(`yargs`);
const shell = require("shelljs");

yargs
    .command(
        "new",
        "Bootstraping new Docsby project!",
        function(yargs) {
            return yargs.option("f", {
                alias: "from",
                describe: "Url to custom Docsby compliant template"
            });
        },
        function(yargs) {
            // very naive getting name of the project
            const projectName = yargs._[yargs._.length - 1];

            // here should be some logic behing cloning things and setting up stuffs
            console.log("bootstraping new default Docsby project");
            if (yargs.f) {
                // TODO: make git clone command async, to be able to remove .git folder after pull
                console.log("using from: to clone project");
                shell.exec(`git clone ${yargs.f} ${projectName}`);
            } else {
                // TODO: make git clone command async, to be able to remove .git folder after pull
                shell.exec(
                    `git clone git@github.com:marckraw/docsby-starter-default.git ${projectName}`
                );
            }
        }
    )
    .command("help", "Runs docsby help", function() {
        shell.exec(`npm run help`);
    })
    .command("build", "Runs docsby build", function() {
        shell.exec(`npm run build`);
    })
    .command("develop", "Runs docsby develop", function() {
        shell.exec(`npm run develop`);
    })
    .command(
        "run",
        "run any npm script from local package",
        function(yargs) {
            return yargs.option("c", {
                alias: "cmd",
                describe: "namd of npm script"
            });
        },
        function(argv) {
            shell.exec(`npm run ${argv.cmd}`);
        }
    )
    .help().argv;
